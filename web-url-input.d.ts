/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   web-url-input.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {LitElement, html, css} from 'lit-element';

import {ArcOverlayMixin} from '@advanced-rest-client/arc-overlay-mixin/arc-overlay-mixin.js';

declare namespace UiElements {

  /**
   * An element to display a dialog to enter an URL with auto hints
   *
   * ### Example
   *
   * ```html
   * <web-url-input purpose="open-browser"></web-url-input>
   * ```
   *
   * ### Styling
   *
   * `<web-url-input>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--web-url-input` | Mixin applied to the element | `{}`
   * `--web-url-input-background-color` | Background color of the element | `#fff`
   * `--web-url-input-input` | Mixin applied to the paper input element | `{}`
   * `--web-url-input-button` | Mixin applied to the paper button element | `{}`
   */
  class WebUrlInput extends
    ArcOverlayMixin(
    Object) {

    /**
     * Current URL value.
     */
    value: string|null|undefined;

    /**
     * True when a suggestion box for the URL is opened.
     */
    suggestionsOpened: boolean|null|undefined;
    readonly _autocomplete: any;
    readonly _model: any;

    /**
     * Input target for the `anypoint-autocomplete` element.
     */
    _autocompleteTarget: HTMLElement|null;

    /**
     * A value to be set in the detail object of `open-web-url` custom event.
     * The editor can server different purposes. Re-set the purpose to inform
     * the application about purpose of the event.
     */
    purpose: string|null|undefined;

    /**
     * Enables compatibility with Anypoint platform
     */
    compatibility: boolean|null|undefined;

    /**
     * Enables Material Design Outlined inputs
     */
    outlined: boolean|null|undefined;
    render(): any;
    connectedCallback(): void;
    disconnectedCallback(): void;
    firstUpdated(): void;

    /**
     * Handler for the query event coming from the aitocomplete.
     * It makes the query to the data store for history data.
     */
    _autocompleteQuery(e: CustomEvent|null): void;

    /**
     * Dispatches `open-web-url` custom event and returns it.
     *
     * @returns Dispatched event
     */
    _dispatchOpenEvent(): CustomEvent|null;

    /**
     * Queries the model for history data.
     *
     * @param q User query from the input field
     * @returns [description]
     */
    _makeQuery(q: String|null): any;

    /**
     * A handler for keyboard key down event bubbling through this element.
     * If the target is the input and the key is Enter key then it calls
     * `_onEnter()` function
     */
    _keyDownHandler(e: KeyboardEvent|null): void;

    /**
     * A handler called when the user press "enter" in any of the form fields.
     * This will send an `open-web-url` event.
     */
    _onEnter(): void;

    /**
     * Sets value of the control when input value changes
     */
    _inputChanged(e: Event): void;

    /**
     * Overrides from ArcOverlayMixin
     */
    _onCaptureEsc(e: Event): void;

    /**
     * Handler for `opened-changed` event dispatched from the autocomplete.
     */
    _suggestionsOpenedHandler(e: CustomEvent|null): void;
  }
}

declare global {

  interface HTMLElementTagNameMap {
    "web-url-input": UiElements.WebUrlInput;
  }
}
